{"version":3,"sources":["constants/action-types.js","reducers/index.js","store/index.js","actions/index.js","components/SearchStock.js","components/HomePage.js","components/StockChart.js","components/DisplayStocks.js","App.js","index.js"],"names":["ADD_STOCK","initialState","stocks","timeInterval","rootReducer","state","action","type","payload","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","require","config","mapDispatchToProps","addStock","stockSymbol","dispatch","fetch","process","STOCK_API_KEY","then","res","json","data","stockInfo","stockRates","chartInfo","chartData","chartLabels","gotDate","Object","entries","key","value","datetime","split","year","date","join","time","push","reverse","formatStockInfo","catch","err","alert","SearchStockConnector","connect","props","useState","setStockSymbol","onSubmit","e","preventDefault","toUpperCase","id","for","onChange","target","HomePage","Chart","StockChart","FONT_COLOR","CHART_COLORS","useEffect","length","datasets","map","stockData","idx","label","symbol","backgroundColor","borderColor","fill","chart","document","getElementById","getContext","labels","options","title","display","text","fontSize","fontColor","tooltips","mode","intersect","titleFontSize","bodyFontSize","hover","scales","xAxes","scaleLabel","labelString","gridLines","color","ticks","yAxes","legend","DisplayStocksConnector","App","class","render"],"mappings":"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","file":"static/js/main.15bfa739.chunk.js","sourcesContent":["export const ADD_STOCK = \"ADD_STOCK\";","import { ADD_STOCK } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  stocks: [],\r\n  timeInterval: '30min'\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case ADD_STOCK:\r\n      return {\r\n        ...state,\r\n        stocks: [...state.stocks, action.payload]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, storeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import { ADD_STOCK } from \"../constants/action-types\";\r\nrequire('dotenv').config()\r\n\r\nconst formatStockInfo = (stockSymbol, data, timeInterval) => {\r\n  const stockRates = data[\"Time Series (\"+timeInterval+\")\"];\r\n  const chartInfo = {\"symbol\": stockSymbol};\r\n  let chartData = [];    // closing values\r\n  let chartLabels = [];  // timestamps\r\n  let gotDate = false;\r\n  for (const [key, value] of Object.entries(stockRates)) {\r\n    const datetime =  key.split(\" \");\r\n    if(!gotDate) {\r\n      const [year, month, day] = datetime[0].split(\"-\");\r\n      const date = [month, day, year].join(\"/\");\r\n      chartInfo[\"date\"] = date;\r\n      gotDate = true;\r\n    }\r\n    const time = datetime[1];\r\n    chartLabels.push(time);\r\n    chartData.push(value[\"4. close\"]);\r\n  }\r\n  chartInfo[\"labels\"] = chartLabels.reverse();  // data listed with most recent first but want earliest to latest\r\n  chartInfo[\"data\"] = chartData.reverse();\r\n  return chartInfo;\r\n}\r\n\r\nexport function addStock(stockSymbol, timeInterval) {\r\n  return function(dispatch) {\r\n    return fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${stockSymbol}&interval=${timeInterval}&apikey=${process.env.STOCK_API_KEY}`)\r\n      .then(res => \r\n        res.json()\r\n      ) \r\n      .then(data => {\r\n        const stockInfo = formatStockInfo(stockSymbol, data, timeInterval) \r\n        dispatch({ \r\n          type: ADD_STOCK, \r\n          payload: stockInfo \r\n        });\r\n      })\r\n      .catch(err => {\r\n        alert(\"Invalid Stock Symbol\")\r\n      });\r\n  };\r\n};","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addStock } from \"../actions/index\";\r\nimport \"./SearchStock.css\"\r\n\r\nconst mapStateToProps = state => {\r\n  return { \r\n    stocks: state.stocks,\r\n    timeInterval: state.timeInterval\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addStock\r\n}\r\n\r\nconst SearchStock = (props) => {\r\n  const { stocks, timeInterval, addStock } = props;\r\n  const [stockSymbol, setStockSymbol] = useState('');\r\n\r\n  const searchStock = (e) => {\r\n    e.preventDefault();\r\n    addStock(stockSymbol.toUpperCase(), timeInterval);\r\n    setStockSymbol('');  // reset search box\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={searchStock} id=\"search-form\">\r\n        <label for=\"stock-symbol\">Stock Symbol: </label>\r\n        <input \r\n          type=\"text\" \r\n          id=\"stock-symbol\" \r\n          value={stockSymbol}\r\n          onChange={(e) => setStockSymbol(e.target.value)}\r\n        />\r\n        <button type=\"submit\" id=\"submit-btn\">Search</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SearchStockConnector = connect(mapStateToProps, mapDispatchToProps)(SearchStock);\r\nexport default SearchStockConnector;","import React from \"react\";\r\nimport \"./HomePage.css\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div id=\"homepage-container\">\r\n      <h2 id=\"welcome-msg\">Welcome to <span id=\"title-text-red\">Stock</span> <span id=\"title-text-blue\">Charts</span></h2>\r\n      <p id=\"welcome-text\">\r\n        Start by searching for a stock <br /> \r\n        to see a graph of its value throughout the day</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import React, { useEffect } from \"react\";\r\nvar Chart = require('chart.js');\r\n\r\nconst StockChart = (props) => {\r\n    const FONT_COLOR = \"white\";\r\n    const CHART_COLORS = ['blue', 'red', 'green', 'yellow', 'purple', 'orange', 'black'];\r\n    const stocks = props.stocks;\r\n\r\n    useEffect(() => {\r\n      if(stocks.length > 0) {\r\n        const datasets = stocks.map((stockData, idx) => (\r\n          {\r\n            label: stockData.symbol,\r\n            backgroundColor: CHART_COLORS[idx],\r\n            borderColor: CHART_COLORS[idx],\r\n            data: stockData.data,\r\n            fill: false\r\n          }\r\n        )\r\n    );\r\n\r\n    var chart = document.getElementById('stocks-chart').getContext('2d');\r\n    var stocksChart = new Chart(chart, {\r\n        type: 'line',\r\n        data: {\r\n          labels: stocks[0].labels,\r\n          datasets: datasets\r\n        },\r\n        options: {\r\n          title: {\r\n            display: true,\r\n            text: \"Stocks over Time: \" + stocks[0].date,\r\n            fontSize: 40,\r\n            fontColor: FONT_COLOR\r\n          },\r\n          tooltips: {\r\n            mode: 'index',\r\n            intersect: false,\r\n            titleFontSize: 20,\r\n            bodyFontSize: 20,\r\n            fontColor: FONT_COLOR\r\n          },\r\n          hover: {\r\n            mode: 'nearest',\r\n            intersect: true\r\n          },\r\n          scales: {\r\n            xAxes: [{\r\n              display: true,\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: 'Timestamp (EST)',\r\n                fontSize: 30,\r\n                fontColor: FONT_COLOR\r\n              },\r\n              gridLines: {\r\n                display: true,\r\n                color: FONT_COLOR\r\n              },\r\n              ticks: {\r\n                fontSize: 25,\r\n                fontColor: FONT_COLOR\r\n              }\r\n            }],\r\n            yAxes: [{\r\n              display: true,\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: 'Closing Value',\r\n                fontSize: 30,\r\n                fontColor: FONT_COLOR\r\n              },\r\n              gridLines: {\r\n                display: true,\r\n                color: FONT_COLOR\r\n              },\r\n              ticks: {\r\n                fontSize: 25,\r\n                fontColor: FONT_COLOR\r\n              }\r\n            }]\r\n          },\r\n          legend: {\r\n            labels: {\r\n                fontSize: 22,\r\n                fontColor: FONT_COLOR\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [stocks])\r\n\r\n  return (\r\n    <canvas id=\"stocks-chart\"></canvas>\r\n  );\r\n}\r\n\r\nexport default StockChart;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HomePage from \"./HomePage\";\r\nimport StockChart from \"./StockChart\";\r\nimport \"./DisplayStocks.css\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { \r\n    stocks: state.stocks,\r\n    timeInterval: state.timeInterval\r\n  };\r\n};\r\n\r\nconst DisplayStocks = (props) => {\r\n  const { stocks, timeInterval } = props;\r\n\r\n  return (\r\n    <div id=\"chart-container\">\r\n      {\r\n        (stocks.length > 0)\r\n        ? <StockChart stocks={stocks}/>\r\n        : <HomePage />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst DisplayStocksConnector = connect(mapStateToProps)(DisplayStocks);\r\nexport default DisplayStocksConnector;","import React from \"react\";\nimport SearchStock from \"./components/SearchStock\";\nimport DisplayStocks from \"./components/DisplayStocks\";\nimport \"./App.css\";\n\nconst App = () => (\n  <div class=\"App\">\n    <SearchStock />\n    <DisplayStocks />\n  </div>\n);\n\nexport default App;","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nimport App from \"./App\";\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}